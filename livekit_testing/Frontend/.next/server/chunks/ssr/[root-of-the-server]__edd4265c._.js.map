{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/public_sans_b106e944.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"public_sans_b106e944-module__yCJdGW__className\",\n  \"variable\": \"public_sans_b106e944-module__yCJdGW__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/public_sans_b106e944.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Public_Sans%22,%22arguments%22:[{%22variable%22:%22--font-public-sans%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22publicSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Public Sans', 'Public Sans Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,2JAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,2JAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,2JAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/app/commitmono_fb1c42e5.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"commitmono_fb1c42e5-module__JmbB2q__className\",\n  \"variable\": \"commitmono_fb1c42e5-module__JmbB2q__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA"}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file:///home/paarth/voice_to_voice/livekit_testing/Frontend/app/commitmono_fb1c42e5.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/local/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22%22,%22arguments%22:[{%22src%22:[{%22path%22:%22./fonts/CommitMono-400-Regular.otf%22,%22weight%22:%22400%22,%22style%22:%22normal%22},{%22path%22:%22./fonts/CommitMono-700-Regular.otf%22,%22weight%22:%22700%22,%22style%22:%22normal%22},{%22path%22:%22./fonts/CommitMono-400-Italic.otf%22,%22weight%22:%22400%22,%22style%22:%22italic%22},{%22path%22:%22./fonts/CommitMono-700-Italic.otf%22,%22weight%22:%22700%22,%22style%22:%22italic%22}],%22variable%22:%22--font-commit-mono%22}],%22variableName%22:%22commitMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'commitMono', 'commitMono Fallback'\",\n        \n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,sIAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;IAEhB;AACJ;AAEA,IAAI,sIAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,sIAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///home/paarth/voice_to_voice/livekit_testing/Frontend/components/theme-toggle.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ApplyThemeScript = registerClientReference(\n    function() { throw new Error(\"Attempted to call ApplyThemeScript() from the server but ApplyThemeScript is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/theme-toggle.tsx <module evaluation>\",\n    \"ApplyThemeScript\",\n);\nexport const ThemeToggle = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeToggle() from the server but ThemeToggle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/theme-toggle.tsx <module evaluation>\",\n    \"ThemeToggle\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,oXAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,6DACA;AAEG,MAAM,cAAc,CAAA,GAAA,oXAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,6DACA","debugId":null}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":["file:///home/paarth/voice_to_voice/livekit_testing/Frontend/components/theme-toggle.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ApplyThemeScript = registerClientReference(\n    function() { throw new Error(\"Attempted to call ApplyThemeScript() from the server but ApplyThemeScript is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/theme-toggle.tsx\",\n    \"ApplyThemeScript\",\n);\nexport const ThemeToggle = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeToggle() from the server but ThemeToggle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/theme-toggle.tsx\",\n    \"ThemeToggle\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,oXAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,yCACA;AAEG,MAAM,cAAc,CAAA,GAAA,oXAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,yCACA","debugId":null}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///home/paarth/voice_to_voice/livekit_testing/Frontend/app-config.ts"],"sourcesContent":["import type { AppConfig } from './lib/types';\n\nexport const APP_CONFIG_DEFAULTS: AppConfig = {\n  companyName: 'LiveKit',\n  pageTitle: 'LiveKit Voice Agent',\n  pageDescription: 'A voice agent built with LiveKit',\n\n  supportsChatInput: true,\n  supportsVideoInput: true,\n  supportsScreenShare: true,\n  isPreConnectBufferEnabled: true,\n\n  logo: '/lk-logo.svg',\n  accent: '#002cf2',\n  logoDark: '/lk-logo-dark.svg',\n  accentDark: '#1fd5f9',\n  startButtonText: 'Start call',\n};\n"],"names":[],"mappings":";;;AAEO,MAAM,sBAAiC;IAC5C,aAAa;IACb,WAAW;IACX,iBAAiB;IAEjB,mBAAmB;IACnB,oBAAoB;IACpB,qBAAqB;IACrB,2BAA2B;IAE3B,MAAM;IACN,QAAQ;IACR,UAAU;IACV,YAAY;IACZ,iBAAiB;AACnB","debugId":null}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":["file:///home/paarth/voice_to_voice/livekit_testing/Frontend/lib/utils.ts"],"sourcesContent":["import { cache } from 'react';\nimport { type ClassValue, clsx } from 'clsx';\nimport { Room } from 'livekit-client';\nimport { twMerge } from 'tailwind-merge';\nimport type { ReceivedChatMessage, TextStreamData } from '@livekit/components-react';\nimport { APP_CONFIG_DEFAULTS } from '@/app-config';\nimport type { AppConfig, SandboxConfig } from './types';\n\nexport const CONFIG_ENDPOINT = process.env.NEXT_PUBLIC_APP_CONFIG_ENDPOINT;\nexport const SANDBOX_ID = process.env.SANDBOX_ID;\n\nexport const THEME_STORAGE_KEY = 'theme-mode';\nexport const THEME_MEDIA_QUERY = '(prefers-color-scheme: dark)';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport function transcriptionToChatMessage(\n  textStream: TextStreamData,\n  room: Room\n): ReceivedChatMessage {\n  return {\n    id: textStream.streamInfo.id,\n    timestamp: textStream.streamInfo.timestamp,\n    message: textStream.text,\n    from:\n      textStream.participantInfo.identity === room.localParticipant.identity\n        ? room.localParticipant\n        : Array.from(room.remoteParticipants.values()).find(\n            (p) => p.identity === textStream.participantInfo.identity\n          ),\n  };\n}\n\nexport function getOrigin(headers: Headers): string {\n  const host = headers.get('host');\n  const proto = headers.get('x-forwarded-proto') || 'https';\n  return `${proto}://${host}`;\n}\n\n// https://react.dev/reference/react/cache#caveats\n// > React will invalidate the cache for all memoized functions for each server request.\nexport const getAppConfig = cache(async (origin: string): Promise<AppConfig> => {\n  if (CONFIG_ENDPOINT) {\n    const sandboxId = SANDBOX_ID ?? origin.split('.')[0];\n\n    try {\n      const response = await fetch(CONFIG_ENDPOINT, {\n        cache: 'no-store',\n        headers: { 'X-Sandbox-ID': sandboxId },\n      });\n\n      const remoteConfig: SandboxConfig = await response.json();\n      const config: AppConfig = { ...APP_CONFIG_DEFAULTS };\n\n      for (const [key, entry] of Object.entries(remoteConfig)) {\n        if (entry === null) continue;\n        if (\n          key in config &&\n          typeof config[key as keyof AppConfig] === entry.type &&\n          typeof config[key as keyof AppConfig] === typeof entry.value\n        ) {\n          // @ts-expect-error I'm not sure quite how to appease TypeScript, but we've thoroughly checked types above\n          config[key as keyof AppConfig] = entry.value as AppConfig[keyof AppConfig];\n        }\n      }\n\n      return config;\n    } catch (error) {\n      console.error('!!!', error);\n    }\n  }\n\n  return APP_CONFIG_DEFAULTS;\n});\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;AAEA;AAEA;;;;;AAGO,MAAM,kBAAkB,QAAQ,GAAG,CAAC,+BAA+B;AACnE,MAAM,aAAa,QAAQ,GAAG,CAAC,UAAU;AAEzC,MAAM,oBAAoB;AAC1B,MAAM,oBAAoB;AAE1B,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,yNAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,sLAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAEO,SAAS,2BACd,UAA0B,EAC1B,IAAU;IAEV,OAAO;QACL,IAAI,WAAW,UAAU,CAAC,EAAE;QAC5B,WAAW,WAAW,UAAU,CAAC,SAAS;QAC1C,SAAS,WAAW,IAAI;QACxB,MACE,WAAW,eAAe,CAAC,QAAQ,KAAK,KAAK,gBAAgB,CAAC,QAAQ,GAClE,KAAK,gBAAgB,GACrB,MAAM,IAAI,CAAC,KAAK,kBAAkB,CAAC,MAAM,IAAI,IAAI,CAC/C,CAAC,IAAM,EAAE,QAAQ,KAAK,WAAW,eAAe,CAAC,QAAQ;IAEnE;AACF;AAEO,SAAS,UAAU,OAAgB;IACxC,MAAM,OAAO,QAAQ,GAAG,CAAC;IACzB,MAAM,QAAQ,QAAQ,GAAG,CAAC,wBAAwB;IAClD,OAAO,GAAG,MAAM,GAAG,EAAE,MAAM;AAC7B;AAIO,MAAM,eAAe,CAAA,GAAA,oUAAA,CAAA,QAAK,AAAD,EAAE,OAAO;IACvC,IAAI,iBAAiB;QACnB,MAAM,YAAY,cAAc,OAAO,KAAK,CAAC,IAAI,CAAC,EAAE;QAEpD,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,iBAAiB;gBAC5C,OAAO;gBACP,SAAS;oBAAE,gBAAgB;gBAAU;YACvC;YAEA,MAAM,eAA8B,MAAM,SAAS,IAAI;YACvD,MAAM,SAAoB;gBAAE,GAAG,6GAAA,CAAA,sBAAmB;YAAC;YAEnD,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,OAAO,OAAO,CAAC,cAAe;gBACvD,IAAI,UAAU,MAAM;gBACpB,IACE,OAAO,UACP,OAAO,MAAM,CAAC,IAAuB,KAAK,MAAM,IAAI,IACpD,OAAO,MAAM,CAAC,IAAuB,KAAK,OAAO,MAAM,KAAK,EAC5D;oBACA,0GAA0G;oBAC1G,MAAM,CAAC,IAAuB,GAAG,MAAM,KAAK;gBAC9C;YACF;YAEA,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,OAAO;QACvB;IACF;IAEA,OAAO,6GAAA,CAAA,sBAAmB;AAC5B","debugId":null}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file:///home/paarth/voice_to_voice/livekit_testing/Frontend/app/layout.tsx"],"sourcesContent":["import { Public_Sans } from 'next/font/google';\nimport localFont from 'next/font/local';\nimport { headers } from 'next/headers';\nimport { ApplyThemeScript, ThemeToggle } from '@/components/theme-toggle';\nimport { getAppConfig, getOrigin } from '@/lib/utils';\nimport './globals.css';\n\nconst publicSans = Public_Sans({\n  variable: '--font-public-sans',\n  subsets: ['latin'],\n});\n\nconst commitMono = localFont({\n  src: [\n    {\n      path: './fonts/CommitMono-400-Regular.otf',\n      weight: '400',\n      style: 'normal',\n    },\n    {\n      path: './fonts/CommitMono-700-Regular.otf',\n      weight: '700',\n      style: 'normal',\n    },\n    {\n      path: './fonts/CommitMono-400-Italic.otf',\n      weight: '400',\n      style: 'italic',\n    },\n    {\n      path: './fonts/CommitMono-700-Italic.otf',\n      weight: '700',\n      style: 'italic',\n    },\n  ],\n  variable: '--font-commit-mono',\n});\n\ninterface RootLayoutProps {\n  children: React.ReactNode;\n}\n\nexport default async function RootLayout({ children }: RootLayoutProps) {\n  const hdrs = await headers();\n  const origin = getOrigin(hdrs);\n  const { accent, accentDark, pageTitle, pageDescription } = await getAppConfig(origin);\n\n  const styles = [\n    accent ? `:root { --primary: ${accent}; }` : '',\n    accentDark ? `.dark { --primary: ${accentDark}; }` : '',\n  ]\n    .filter(Boolean)\n    .join('\\n');\n\n  return (\n    <html lang=\"en\" suppressHydrationWarning className=\"scroll-smooth\">\n      <head>\n        {styles && <style>{styles}</style>}\n        <title>{pageTitle}</title>\n        <meta name=\"description\" content={pageDescription + '\\n\\nBuilt with LiveKit Agents.'} />\n        <ApplyThemeScript />\n      </head>\n      <body\n        className={`${publicSans.variable} ${commitMono.variable} overflow-x-hidden antialiased`}\n      >\n        {children}\n        <div className=\"group fixed bottom-0 left-1/2 z-50 mb-2 -translate-x-1/2\">\n          <ThemeToggle className=\"translate-y-20 transition-transform delay-150 duration-300 group-hover:translate-y-0\" />\n        </div>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AACA;;;;;;;;AAsCe,eAAe,WAAW,EAAE,QAAQ,EAAmB;IACpE,MAAM,OAAO,MAAM,CAAA,GAAA,8PAAA,CAAA,UAAO,AAAD;IACzB,MAAM,SAAS,CAAA,GAAA,4GAAA,CAAA,YAAS,AAAD,EAAE;IACzB,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,eAAe,EAAE,GAAG,MAAM,CAAA,GAAA,4GAAA,CAAA,eAAY,AAAD,EAAE;IAE9E,MAAM,SAAS;QACb,SAAS,CAAC,mBAAmB,EAAE,OAAO,GAAG,CAAC,GAAG;QAC7C,aAAa,CAAC,mBAAmB,EAAE,WAAW,GAAG,CAAC,GAAG;KACtD,CACE,MAAM,CAAC,SACP,IAAI,CAAC;IAER,qBACE,6WAAC;QAAK,MAAK;QAAK,wBAAwB;QAAC,WAAU;;0BACjD,6WAAC;;oBACE,wBAAU,6WAAC;kCAAO;;;;;;kCACnB,6WAAC;kCAAO;;;;;;kCACR,6WAAC;wBAAK,MAAK;wBAAc,SAAS,kBAAkB;;;;;;kCACpD,6WAAC,8HAAA,CAAA,mBAAgB;;;;;;;;;;;0BAEnB,6WAAC;gBACC,WAAW,GAAG,+IAAA,CAAA,UAAU,CAAC,QAAQ,CAAC,CAAC,EAAE,0HAAA,CAAA,UAAU,CAAC,QAAQ,CAAC,8BAA8B,CAAC;;oBAEvF;kCACD,6WAAC;wBAAI,WAAU;kCACb,cAAA,6WAAC,8HAAA,CAAA,cAAW;4BAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;AAKjC","debugId":null}}]
}